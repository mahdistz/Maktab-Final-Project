# Generated by Django 3.2 on 2022-02-21 20:10

from django.db import migrations, models
import mail.models


class Migration(migrations.Migration):

    dependencies = [
        ('mail', '0002_initial'),
    ]

    operations = [
        migrations.RenameField(
            model_name='email',
            old_name='timestamp',
            new_name='created_time',
        ),
        migrations.RenameField(
            model_name='email',
            old_name='to',
            new_name='recipients',
        ),
        migrations.RemoveField(
            model_name='category',
            name='mail',
        ),
        migrations.AddField(
            model_name='email',
            name='file',
            field=models.FileField(blank=True, help_text='max 25 megabytes', null=True, upload_to='documents/%Y/%m/%d', validators=[mail.models.file_validator]),
        ),
        migrations.AddField(
            model_name='email',
            name='is_archived',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='email',
            name='is_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='email',
            name='is_drafted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='email',
            name='is_read',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='email',
            name='is_sent',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='email',
            name='is_starred',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='email',
            name='is_trashed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='email',
            name='mail',
            field=models.ManyToManyField(related_name='mail_category', to='mail.Category'),
        ),
    ]
